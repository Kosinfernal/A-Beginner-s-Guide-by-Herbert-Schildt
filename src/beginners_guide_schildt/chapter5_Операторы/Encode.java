package beginners_guide_schildt.chapter5_Операторы;

// Использование поразрядной операции исключающего ИЛИ
// для шифрования и дешифрования сообщений.
// Над всеми символами сообщения будет выполняться поразрядная
//операция исключающего ИЛИ. Сначала данная операция будет выполняться
//при шифровании, формируя зашифрованный текст, а затем - при дешифровании,
//которое восстановит исходный текст сообщения
class Encode {
    public static void main(String args[]) {
        String msg = "Любой текст любой длины с любыми символами";
        String encmsg = "";
        String decmsg = "";
        int key = 88;//101 1000
        byte variable = 123;//111 1011

        System.out.println("Был введён символ: '" + key + "'\nявляющийся кодом и шифрующий исходный текст,");
        System.out.println("который в двоичной системе будет вылгядить как: ");
        System.out.print("'");
        for(key=128; key > 0; key = key/2) { //128 - 1000 0000
            if((variable & key) != 0) System.out.print("1");
//поразрядную операцию И (&)
//можно рассматривать как способ сброса единиц в отдельных двоичных разрядах (битов).
//Это означает, что если какой-либо бит в любом из операндов равен 0, то соответствующий
//бит результата всегда будет нулевым
            else System.out.print("0");
        }
        System.out.print("'");
        System.out.println();

        System.out.print("Исходное сообщение: '");
        System.out.println(msg + "'");

        key = 88;//присвоение переменной key значения кода числа потому как выше идёт перебор значений

        // Зашифровать сообщение
        for(int i=0; i < msg.length(); i++)//int length () - Возвращает длину строки
            encmsg += (char) (msg.charAt(i) ^ key);
        //char charAt (index) - Возвращает символ, занимающий в строке позицию, указываемую параметром index
        //Создание зашифрованной строки

        System.out.print("Зашифрованное сообщение: '");
        System.out.println(encmsg + "'");

        // Дешифровать сообщение
        for(int i=0; i < msg.length(); i++)
            decmsg += (char) (encmsg.charAt(i) ^ key);
        //Сазданне дешифрованной строки

        System.out.print("Дешифрованное сообщение: '");
        System.out.println(decmsg + "'");
    }
}